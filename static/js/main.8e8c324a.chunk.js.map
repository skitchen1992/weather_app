{"version":3,"sources":["store/types.ts","store/actions/alertActions.ts","components/Search.tsx","store/actions/weatherActions.ts","components/Alert.tsx","components/Weather.tsx","App.tsx","store/reducers/weatherReducer.ts","store/reducers/alertReducer.ts","store/index.ts","index.tsx"],"names":["GET_WEATHER","SET_LOADING","SET_ERROR","SET_ALERT","setAlert","message","type","payload","Search","title","dispatch","useDispatch","useState","city","setCity","className","onSubmit","e","preventDefault","trim","a","fetch","res","ok","json","resData","Error","getWeather","placeholder","style","maxWidth","value","onChange","currentTarget","margin","Alert","onClose","onClick","justifyContent","Weather","data","fahrenheit","main","temp","toFixed","celsius","marginBottom","name","sys","country","alignItems","weather","description","src","icon","alt","humidity","pressure","wind","speed","App","weatherData","useSelector","state","loading","error","alertMsg","alert","initialState","rootReducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e8c324a.chunk.js","sourcesContent":["export const GET_WEATHER = 'GET_WEATHER';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_ERROR = 'SET_ERROR';\nexport const SET_ALERT = 'SET_ALERT';\n\nexport interface Weather {\n  description: string;\n  icon: string;\n  id: number;\n  main: string;\n}\n\nexport interface WeatherData {\n  base: string;\n  clouds: {\n    all: number;\n  };\n  cod: number;\n  coord: {\n    lon: number;\n    lat: number;\n  };\n  dt: number;\n  id: number;\n  main: {\n    feels_like: number;\n    humidity: number;\n    pressure: number;\n    temp: number;\n    temp_max: number;\n    temp_min: number;\n  };\n  name: string;\n  sys: {\n    country: string;\n    id: number;\n    sunrise: number;\n    sunset: number;\n    type: number;\n  };\n  timezone: number;\n  visibility: number;\n  weather: Weather[];\n  wind: {\n    speed: number;\n    deg: number;\n  };\n}\n\nexport interface WeatherError {\n  cod: string;\n  message: string;\n}\n\nexport interface WeatherState {\n  data: WeatherData | null;\n  loading: boolean;\n  error: string;\n}\n\ninterface GetWeatherAction {\n  type: typeof GET_WEATHER;\n  payload: WeatherData;\n}\n\ninterface SetLoadingAction {\n  type: typeof SET_LOADING;\n}\n\ninterface SetErrorAction {\n  type: typeof SET_ERROR;\n  payload: string;\n}\n\nexport type WeatherAction = GetWeatherAction | SetLoadingAction | SetErrorAction;\n\nexport interface AlertAction {\n  type: typeof SET_ALERT;\n  payload: string;\n}\n\nexport interface AlertState {\n  message: string;\n}","import { SET_ALERT, AlertAction } from '../types';\n\nexport const setAlert = (message: string): AlertAction => {\n  return {\n    type: SET_ALERT,\n    payload: message\n  }\n}","import React, { FC, useState, FormEvent } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setAlert } from '../store/actions/alertActions';\nimport { getWeather, setLoading } from '../store/actions/weatherActions';\n\ninterface SearchProps {\n  title: string;\n}\n\nconst Search: FC<SearchProps> = ({ title }) => {\n  const dispatch = useDispatch();\n  const [city, setCity] = useState('');\n\n  const changeHandler = (e: FormEvent<HTMLInputElement>) => {\n    setCity(e.currentTarget.value);\n  }\n\n  const submitHandler = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if(city.trim() === '') {\n      return dispatch(setAlert('City is required!'));\n    }\n\n    dispatch(setLoading());\n    dispatch(getWeather(city));\n    setCity('');\n  }\n\n  return(\n    <div className=\"hero is-light has-text-centered\">\n      <div className=\"hero-body\">\n        <div className=\"container\">\n          <h1 className=\"title\">{title}</h1>\n          <form className=\"py-5\" onSubmit={submitHandler}>\n            <input \n              type=\"text\"\n              className=\"input has-text-centered mb-2\"\n              placeholder=\"Enter city name\"\n              style={{maxWidth: 300}}\n              value={city}\n              onChange={changeHandler}\n            />\n            <button className=\"button is-primary is-fullwidth\" style={{maxWidth: 300, margin: '0 auto'}}>Search</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );  \n}\n\nexport default Search;","import {ThunkAction} from 'redux-thunk';\nimport {RootState} from '..';\nimport {WeatherAction, WeatherData, WeatherError, GET_WEATHER, SET_LOADING, SET_ERROR} from '../types';\n\nconst REACT_APP_API_KEY = \"dff5c49fb0a4e399c82f0faa17e7cfb7\"\nexport const getWeather = (city: string): ThunkAction<void, RootState, null, WeatherAction> => {\n    return async dispatch => {\n        try {\n            const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${REACT_APP_API_KEY}`);\n\n            if (!res.ok) {\n                const resData: WeatherError = await res.json();\n                throw new Error(resData.message);\n            }\n\n            const resData: WeatherData = await res.json();\n            dispatch({\n                type: GET_WEATHER,\n                payload: resData\n            });\n        } catch (err) {\n            dispatch({\n                type: SET_ERROR,\n                payload: err.message\n            });\n        }\n    }\n}\n\nexport const setLoading = (): WeatherAction => {\n    return {\n        type: SET_LOADING\n    }\n}\n\nexport const setError = (): WeatherAction => {\n    return {\n        type: SET_ERROR,\n        payload: ''\n    }\n}","import React, { FC } from 'react';\n\ninterface AlertProps {\n  message: string;\n  onClose: () => void\n}\n\nconst Alert: FC<AlertProps> = ({ message, onClose }) => {\n  return(\n    <div className=\"modal is-active has-text-centered\">\n      <div className=\"modal-background\" onClick={onClose}></div>\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head has-background-danger\">\n          <p className=\"modal-card-title has-text-white\">{message}</p>\n        </header>\n        <footer className=\"modal-card-foot\" style={{justifyContent: 'center'}}>\n          <button className=\"button\" onClick={onClose}>Close</button>\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default Alert;","import React, { FC } from 'react';\nimport { WeatherData } from '../store/types';\n\ninterface WeatherProps {\n  data: WeatherData;\n}\n\nconst Weather: FC<WeatherProps> = ({ data }) => {\n  const fahrenheit = (data.main.temp * 1.8 - 459.67).toFixed(2);\n  const celsius = (data.main.temp - 273.15).toFixed(2);\n\n  return(\n    <section className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title has-text-centered\" style={{marginBottom: 50}}>{data.name} - {data.sys.country}</h1>\n        <div className=\"level\" style={{alignItems: 'flex-start'}}>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">{data.weather[0].description}</p>\n              <p className=\"title\"><img src={`http://openweathermap.org/img/wn/${data.weather[0].icon}.png`} alt=\"\"/></p>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">temp</p>\n              <div className=\"title\">\n                <p className=\"mb-2\">{data.main.temp}K</p>\n                <p className=\"mb-2\">{fahrenheit}<sup>&#8457;</sup></p>\n                <p>{celsius}<sup>&#8451;</sup></p>\n              </div>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">humidity</p>\n              <p className=\"title\">{data.main.humidity}</p>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">pressure</p>\n              <p className=\"title\">{data.main.pressure}</p>\n            </div>\n          </div>\n          <div className=\"level-item has-text-centered\">\n            <div>\n              <p className=\"heading\">wind</p>\n              <p className=\"title\">{data.wind.speed} m/s</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n}\n\nexport default Weather;","import React, { FC } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './App.css';\n\nimport { RootState } from './store';\nimport Search from './components/Search';\nimport Alert from './components/Alert';\nimport Weather from './components/Weather';\nimport { setAlert } from './store/actions/alertActions';\nimport { setError } from './store/actions/weatherActions';\n\nconst App: FC = () => {\n  const dispatch = useDispatch();\n  const weatherData = useSelector((state: RootState) => state.weather.data);\n  const loading = useSelector((state: RootState) => state.weather.loading);\n  const error = useSelector((state: RootState) => state.weather.error);\n  const alertMsg = useSelector((state: RootState) => state.alert.message);\n\n  return (\n    <div className=\"has-text-centered\">\n      <Search title=\"Enter city name and press search button\" />\n      {loading ? <h2 className=\"is-size-3 py-2\">Loading...</h2> : weatherData && <Weather data={weatherData} />}\n\n      {alertMsg && <Alert message={alertMsg} onClose={() => dispatch(setAlert(''))} />}\n      {error && <Alert message={error} onClose={() => dispatch(setError())} />}\n    </div>\n  );\n}\n\nexport default App;\n","import { WeatherState, WeatherAction, GET_WEATHER, SET_LOADING, SET_ERROR } from \"../types\";\n\nconst initialState: WeatherState = {\n  data: null,\n  loading: false,\n  error: ''\n}\n\nexport default (state = initialState, action: WeatherAction): WeatherState => {\n  switch(action.type) {\n    case GET_WEATHER:\n      return {\n        data: action.payload,\n        loading: false,\n        error: ''\n      }\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true\n      }\n    case SET_ERROR: \n      return {\n        ...state,\n        error: action.payload,\n        loading: false\n      }\n    default: \n      return state;\n  }\n}","import { AlertState, AlertAction, SET_ALERT } from \"../types\";\n\nconst initialState: AlertState = {\n  message: ''\n}\n\nexport default (state = initialState, action: AlertAction): AlertState => {\n  switch(action.type) {\n    case SET_ALERT:\n      return {\n        message: action.payload\n      }\n    default:\n      return state;\n  }\n}","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport weatherReducer from './reducers/weatherReducer';\nimport alertReducer from './reducers/alertReducer';\n\nconst rootReducer = combineReducers({\n  weather: weatherReducer,\n  alert: alertReducer\n});\n\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nexport type RootState = ReturnType<typeof rootReducer>;\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport '../node_modules/bulma/css/bulma.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}